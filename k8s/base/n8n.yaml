apiVersion: v1
kind: Service
metadata:
  name: n8n
  namespace: n8n
spec:
  type: NodePort
  ports:
    - port: 5678
      targetPort: 5678
      nodePort: 30678
  selector:
    app: n8n
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: n8n
  namespace: n8n
spec:
  selector:
    matchLabels:
      app: n8n
  replicas: 1
  template:
    metadata:
      labels:
        app: n8n
    spec:
      containers:
        - name: n8n
          image: n8nio/n8n:latest
          env:
            - name: DB_TYPE
              value: postgresdb
            - name: DB_POSTGRESDB_HOST
              value: postgres
            - name: DB_POSTGRESDB_PORT
              value: "5432"
            - name: DB_POSTGRESDB_USER
              valueFrom:
                secretKeyRef:
                  name: n8n-secret
                  key: DB_POSTGRESDB_USER
            - name: DB_POSTGRESDB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: n8n-secret
                  key: DB_POSTGRESDB_PASSWORD
            - name: DB_POSTGRESDB_DATABASE
              valueFrom:
                secretKeyRef:
                  name: n8n-secret
                  key: DB_POSTGRESDB_DATABASE
            - name: N8N_ENCRYPTION_KEY
              valueFrom:
                secretKeyRef:
                  name: n8n-secret
                  key: N8N_ENCRYPTION_KEY
            - name: WEBHOOK_URL
              valueFrom:
                secretKeyRef:
                  name: n8n-secret
                  key: WEBHOOK_URL
            # MCP integration
            - name: N8N_COMMUNITY_NODES_ENABLED
              value: "true"
            - name: N8N_COMMUNITY_NODES
              value: "n8n-nodes-mcp"
            - name: MCP_SERVER_URL
              value: "http://mcp-server:1991"
            - name: N8N_AI_ENABLED
              value: "true"
          ports:
            - containerPort: 5678
          resources:
            requests:
              memory: "250Mi"
            limits:
              memory: "500Mi"
          volumeMounts:
            - name: n8n-persistent-storage
              mountPath: /home/node/.n8n
          # Install n8n-nodes-mcp at container startup
          lifecycle:
            postStart:
              exec:
                command:
                  - "/bin/sh"
                  - "-c"
                  - "cd /usr/local/lib/node_modules/n8n && npm install n8n-nodes-mcp"
      volumes:
        - name: n8n-persistent-storage
          persistentVolumeClaim:
            claimName: n8n-pvc
